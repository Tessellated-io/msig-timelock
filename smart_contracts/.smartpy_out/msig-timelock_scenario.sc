[{"shortname": "addExecutionRequest_-_succeeds_with_all_signatures", "longname": "addExecutionRequest - succeeds with all signatures", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 66 (nonce (literal (nat 0) 67)) (operator_public_keys (list 66 (reduce (attr (account_of_seed \"alice\" 178) \"public_key\" 178) 178) (reduce (attr (account_of_seed \"bob\" 179) \"public_key\" 179) 179) (reduce (attr (account_of_seed \"charlie\" 180) \"public_key\" 180) 180) (reduce (attr (account_of_seed \"dan\" 181) \"public_key\" 181) 181) (reduce (attr (account_of_seed \"eve\" 182) \"public_key\" 182) 182))) (signers_threshold (literal (intOrNat 3) 66)) (timelock (type_annotation (big_map 75 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 75)) (timelock_seconds (literal (nat 3600) 63)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 86) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 88) (match_tuple 89 (params 86) \"match_pair_89_fst\" \"match_pair_89_snd\") (match_tuple 92 (variant_arg \"match_pair_89_snd\" 89) \"match_pair_92_fst\" \"match_pair_92_snd\") (match_tuple 93 (variant_arg \"match_pair_92_snd\" 92) \"match_pair_93_fst\" \"match_pair_93_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_92_fst\" 92) (unknown 1) 96) 96) (pack (type_annotation (chain_id) (unknown 1) 96) 96) 96) (literal (string \"BAD_CHAIN_ID\") 96) 96) (verify (eq (variant_arg \"match_pair_93_fst\" 93) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 99) 99) 99) (literal (string \"BAD_NONCE\") 99) 99) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 102) 102) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 103) ((ifBlock (contains (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 106) ((verify (check_signature (iter \"operator_public_key\" 103) (getItem (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 107) (pack (variant_arg \"match_pair_89_snd\" 89) 107) 107) (literal (string \"BAD_SIGNATURE\") 107) 107) (set (getLocal \"valid_signatures_counter\" 190) (add (getLocal \"valid_signatures_counter\" 108) (literal (intOrNat 1) 108) 108) 108)) 106)) 103) (verify (ge (getLocal \"valid_signatures_counter\" 111) (attr (data) \"signers_threshold\" 111) 111) (literal (string \"TOO_FEW_SIGS\") 111) 111) (set (attr (data) \"nonce\" 99) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 114) 114) 114) (set (getItem (attr (data) \"timelock\" 117) (attr (data) \"nonce\" 99) 117) (tuple 117 (now) (variant_arg \"match_pair_93_snd\" 93)) 117))) (execute True ((match_tuple 126 (getItem (attr (data) \"timelock\" 117) (params 123) 125) \"match_pair_126_fst\" \"match_pair_126_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_126_fst\" 126) (toInt (attr (data) \"timelock_seconds\" 129) 129) 129) (now) 130) (literal (string \"TOO_EARLY\") 130) 130) (delItem (attr (data) \"timelock\" 117) (params 123) 133) (set_type (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) (list \"operation\") 137) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) ((set (operations 138) (cons (iter \"op\" 138) (operations 138) 138) 138)) 138))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 190, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 152 (admin (literal (local-address 0) 66)) (storedValue (literal (intOrNat 0) 152)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 160) 160) (literal (string \"NOT_ADMIN\") 160) 160) (set (attr (data) \"storedValue\" 161) (params 159) 161))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 197, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 227 (map 227 ((reduce (attr (account_of_seed \"alice\" 178) \"public_key_hash\" 178) 178) (reduce (make_signature (reduce (attr (account_of_seed \"alice\" 178) \"secret_key\" 178) 178) (pack (tuple 209 (literal (chain_id_cst \"0x9caecab9\") 193) (tuple 209 (literal (intOrNat 1) 209) (lambda 0 \"\" 209 ((set_type (lambdaParams 0 \"\" 209 (unknown 5)) \"unit\" 202) (result (list 204 (transfer (literal (intOrNat 1) 204) (literal (mutez 0) 204) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 203) \"Some\" \"None\" 203) 204)) 204))))) 209) \"Raw\" 211) 211)) ((reduce (attr (account_of_seed \"bob\" 179) \"public_key_hash\" 179) 179) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 179) \"secret_key\" 179) 179) (pack (tuple 209 (literal (chain_id_cst \"0x9caecab9\") 193) (tuple 209 (literal (intOrNat 1) 209) (lambda 0 \"\" 209 ((set_type (lambdaParams 0 \"\" 209 (unknown 5)) \"unit\" 202) (result (list 204 (transfer (literal (intOrNat 1) 204) (literal (mutez 0) 204) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 203) \"Some\" \"None\" 203) 204)) 204))))) 209) \"Raw\" 212) 212)) ((reduce (attr (account_of_seed \"charlie\" 180) \"public_key_hash\" 180) 180) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 180) \"secret_key\" 180) 180) (pack (tuple 209 (literal (chain_id_cst \"0x9caecab9\") 193) (tuple 209 (literal (intOrNat 1) 209) (lambda 0 \"\" 209 ((set_type (lambdaParams 0 \"\" 209 (unknown 5)) \"unit\" 202) (result (list 204 (transfer (literal (intOrNat 1) 204) (literal (mutez 0) 204) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 203) \"Some\" \"None\" 203) 204)) 204))))) 209) \"Raw\" 213) 213)) ((reduce (attr (account_of_seed \"dan\" 181) \"public_key_hash\" 181) 181) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 181) \"secret_key\" 181) 181) (pack (tuple 209 (literal (chain_id_cst \"0x9caecab9\") 193) (tuple 209 (literal (intOrNat 1) 209) (lambda 0 \"\" 209 ((set_type (lambdaParams 0 \"\" 209 (unknown 5)) \"unit\" 202) (result (list 204 (transfer (literal (intOrNat 1) 204) (literal (mutez 0) 204) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 203) \"Some\" \"None\" 203) 204)) 204))))) 209) \"Raw\" 214) 214)) ((reduce (attr (account_of_seed \"eve\" 182) \"public_key_hash\" 182) 182) (reduce (make_signature (reduce (attr (account_of_seed \"eve\" 182) \"secret_key\" 182) 182) (pack (tuple 209 (literal (chain_id_cst \"0x9caecab9\") 193) (tuple 209 (literal (intOrNat 1) 209) (lambda 0 \"\" 209 ((set_type (lambdaParams 0 \"\" 209 (unknown 5)) \"unit\" 202) (result (list 204 (transfer (literal (intOrNat 1) 204) (literal (mutez 0) 204) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 203) \"Some\" \"None\" 203) 204)) 204))))) 209) \"Raw\" 215) 215))) (tuple 227 (literal (chain_id_cst \"0x9caecab9\") 193) (tuple 227 (literal (intOrNat 1) 227) (lambda 1 \"\" 227 ((set_type (lambdaParams 1 \"\" 227 (unknown 6)) \"unit\" 202) (result (list 204 (transfer (literal (intOrNat 1) 204) (literal (mutez 0) 204) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 203) \"Some\" \"None\" 203) 204)) 204))))))", "line_no": 227, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 193)", "time": "(literal (timestamp 123) 226)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 227)", "show": true, "valid": "(literal (bool True) 227)", "voting_powers": "(map 227 )"}, {"action": "verify", "condition": "(contains (attr (contractData 0 227) \"timelock\" 233) (literal (intOrNat 1) 233) 233)", "line_no": 233}, {"action": "verify", "condition": "(eq (first (getItem (attr (contractData 0 227) \"timelock\" 233) (literal (intOrNat 1) 236) 236) 237) (literal (timestamp 123) 226) 237)", "line_no": 237}]}, {"shortname": "addExecutionRequest_-_succeeds_with_threshold_signatures", "longname": "addExecutionRequest - succeeds with threshold signatures", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 66 (nonce (literal (nat 0) 67)) (operator_public_keys (list 66 (reduce (attr (account_of_seed \"alice\" 244) \"public_key\" 244) 244) (reduce (attr (account_of_seed \"bob\" 245) \"public_key\" 245) 245) (reduce (attr (account_of_seed \"charlie\" 246) \"public_key\" 246) 246) (reduce (attr (account_of_seed \"dan\" 247) \"public_key\" 247) 247) (reduce (attr (account_of_seed \"eve\" 248) \"public_key\" 248) 248))) (signers_threshold (literal (intOrNat 3) 66)) (timelock (type_annotation (big_map 75 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 75)) (timelock_seconds (literal (nat 3600) 63)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 86) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 88) (match_tuple 89 (params 86) \"match_pair_89_fst\" \"match_pair_89_snd\") (match_tuple 92 (variant_arg \"match_pair_89_snd\" 89) \"match_pair_92_fst\" \"match_pair_92_snd\") (match_tuple 93 (variant_arg \"match_pair_92_snd\" 92) \"match_pair_93_fst\" \"match_pair_93_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_92_fst\" 92) (unknown 7) 96) 96) (pack (type_annotation (chain_id) (unknown 7) 96) 96) 96) (literal (string \"BAD_CHAIN_ID\") 96) 96) (verify (eq (variant_arg \"match_pair_93_fst\" 93) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 99) 99) 99) (literal (string \"BAD_NONCE\") 99) 99) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 102) 102) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 103) ((ifBlock (contains (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 106) ((verify (check_signature (iter \"operator_public_key\" 103) (getItem (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 107) (pack (variant_arg \"match_pair_89_snd\" 89) 107) 107) (literal (string \"BAD_SIGNATURE\") 107) 107) (set (getLocal \"valid_signatures_counter\" 256) (add (getLocal \"valid_signatures_counter\" 108) (literal (intOrNat 1) 108) 108) 108)) 106)) 103) (verify (ge (getLocal \"valid_signatures_counter\" 111) (attr (data) \"signers_threshold\" 111) 111) (literal (string \"TOO_FEW_SIGS\") 111) 111) (set (attr (data) \"nonce\" 99) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 114) 114) 114) (set (getItem (attr (data) \"timelock\" 117) (attr (data) \"nonce\" 99) 117) (tuple 117 (now) (variant_arg \"match_pair_93_snd\" 93)) 117))) (execute True ((match_tuple 126 (getItem (attr (data) \"timelock\" 117) (params 123) 125) \"match_pair_126_fst\" \"match_pair_126_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_126_fst\" 126) (toInt (attr (data) \"timelock_seconds\" 129) 129) 129) (now) 130) (literal (string \"TOO_EARLY\") 130) 130) (delItem (attr (data) \"timelock\" 117) (params 123) 133) (set_type (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) (list \"operation\") 137) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) ((set (operations 138) (cons (iter \"op\" 138) (operations 138) 138) 138)) 138))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 256, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 152 (admin (literal (local-address 0) 66)) (storedValue (literal (intOrNat 0) 152)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 160) 160) (literal (string \"NOT_ADMIN\") 160) 160) (set (attr (data) \"storedValue\" 161) (params 159) 161))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 263, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 289 (map 289 ((reduce (attr (account_of_seed \"bob\" 245) \"public_key_hash\" 245) 245) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 245) \"secret_key\" 245) 245) (pack (tuple 275 (literal (chain_id_cst \"0x9caecab9\") 259) (tuple 275 (literal (intOrNat 1) 275) (lambda 0 \"\" 275 ((set_type (lambdaParams 0 \"\" 275 (unknown 11)) \"unit\" 268) (result (list 270 (transfer (literal (intOrNat 1) 270) (literal (mutez 0) 270) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 269) \"Some\" \"None\" 269) 270)) 270))))) 275) \"Raw\" 277) 277)) ((reduce (attr (account_of_seed \"charlie\" 246) \"public_key_hash\" 246) 246) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 246) \"secret_key\" 246) 246) (pack (tuple 275 (literal (chain_id_cst \"0x9caecab9\") 259) (tuple 275 (literal (intOrNat 1) 275) (lambda 0 \"\" 275 ((set_type (lambdaParams 0 \"\" 275 (unknown 11)) \"unit\" 268) (result (list 270 (transfer (literal (intOrNat 1) 270) (literal (mutez 0) 270) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 269) \"Some\" \"None\" 269) 270)) 270))))) 275) \"Raw\" 278) 278)) ((reduce (attr (account_of_seed \"dan\" 247) \"public_key_hash\" 247) 247) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 247) \"secret_key\" 247) 247) (pack (tuple 275 (literal (chain_id_cst \"0x9caecab9\") 259) (tuple 275 (literal (intOrNat 1) 275) (lambda 0 \"\" 275 ((set_type (lambdaParams 0 \"\" 275 (unknown 11)) \"unit\" 268) (result (list 270 (transfer (literal (intOrNat 1) 270) (literal (mutez 0) 270) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 269) \"Some\" \"None\" 269) 270)) 270))))) 275) \"Raw\" 279) 279))) (tuple 289 (literal (chain_id_cst \"0x9caecab9\") 259) (tuple 289 (literal (intOrNat 1) 289) (lambda 1 \"\" 289 ((set_type (lambdaParams 1 \"\" 289 (unknown 12)) \"unit\" 268) (result (list 270 (transfer (literal (intOrNat 1) 270) (literal (mutez 0) 270) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 269) \"Some\" \"None\" 269) 270)) 270))))))", "line_no": 289, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 259)", "time": "(literal (timestamp 123) 288)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 289)", "show": true, "valid": "(literal (bool True) 289)", "voting_powers": "(map 289 )"}, {"action": "verify", "condition": "(contains (attr (contractData 0 289) \"timelock\" 295) (literal (intOrNat 1) 295) 295)", "line_no": 295}, {"action": "verify", "condition": "(eq (first (getItem (attr (contractData 0 289) \"timelock\" 295) (literal (intOrNat 1) 298) 298) 299) (literal (timestamp 123) 288) 299)", "line_no": 299}]}, {"shortname": "addExecutionRequest_-_fails_with_bad_nonce", "longname": "addExecutionRequest - fails with bad nonce", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 66 (nonce (literal (nat 0) 67)) (operator_public_keys (list 66 (reduce (attr (account_of_seed \"alice\" 306) \"public_key\" 306) 306) (reduce (attr (account_of_seed \"bob\" 307) \"public_key\" 307) 307) (reduce (attr (account_of_seed \"charlie\" 308) \"public_key\" 308) 308) (reduce (attr (account_of_seed \"dan\" 309) \"public_key\" 309) 309) (reduce (attr (account_of_seed \"eve\" 310) \"public_key\" 310) 310))) (signers_threshold (literal (intOrNat 3) 66)) (timelock (type_annotation (big_map 75 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 75)) (timelock_seconds (literal (nat 3600) 63)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 86) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 88) (match_tuple 89 (params 86) \"match_pair_89_fst\" \"match_pair_89_snd\") (match_tuple 92 (variant_arg \"match_pair_89_snd\" 89) \"match_pair_92_fst\" \"match_pair_92_snd\") (match_tuple 93 (variant_arg \"match_pair_92_snd\" 92) \"match_pair_93_fst\" \"match_pair_93_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_92_fst\" 92) (unknown 13) 96) 96) (pack (type_annotation (chain_id) (unknown 13) 96) 96) 96) (literal (string \"BAD_CHAIN_ID\") 96) 96) (verify (eq (variant_arg \"match_pair_93_fst\" 93) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 99) 99) 99) (literal (string \"BAD_NONCE\") 99) 99) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 102) 102) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 103) ((ifBlock (contains (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 106) ((verify (check_signature (iter \"operator_public_key\" 103) (getItem (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 107) (pack (variant_arg \"match_pair_89_snd\" 89) 107) 107) (literal (string \"BAD_SIGNATURE\") 107) 107) (set (getLocal \"valid_signatures_counter\" 318) (add (getLocal \"valid_signatures_counter\" 108) (literal (intOrNat 1) 108) 108) 108)) 106)) 103) (verify (ge (getLocal \"valid_signatures_counter\" 111) (attr (data) \"signers_threshold\" 111) 111) (literal (string \"TOO_FEW_SIGS\") 111) 111) (set (attr (data) \"nonce\" 99) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 114) 114) 114) (set (getItem (attr (data) \"timelock\" 117) (attr (data) \"nonce\" 99) 117) (tuple 117 (now) (variant_arg \"match_pair_93_snd\" 93)) 117))) (execute True ((match_tuple 126 (getItem (attr (data) \"timelock\" 117) (params 123) 125) \"match_pair_126_fst\" \"match_pair_126_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_126_fst\" 126) (toInt (attr (data) \"timelock_seconds\" 129) 129) 129) (now) 130) (literal (string \"TOO_EARLY\") 130) 130) (delItem (attr (data) \"timelock\" 117) (params 123) 133) (set_type (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) (list \"operation\") 137) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) ((set (operations 138) (cons (iter \"op\" 138) (operations 138) 138) 138)) 138))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 318, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 152 (admin (literal (local-address 0) 66)) (storedValue (literal (intOrNat 0) 152)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 160) 160) (literal (string \"NOT_ADMIN\") 160) 160) (set (attr (data) \"storedValue\" 161) (params 159) 161))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 325, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 353 (map 353 ((reduce (attr (account_of_seed \"bob\" 307) \"public_key_hash\" 307) 307) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 307) \"secret_key\" 307) 307) (pack (tuple 337 (literal (chain_id_cst \"0x9caecab9\") 321) (tuple 337 (literal (intOrNat 4) 337) (lambda 0 \"\" 337 ((set_type (lambdaParams 0 \"\" 337 (unknown 17)) \"unit\" 330) (result (list 332 (transfer (literal (intOrNat 1) 332) (literal (mutez 0) 332) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 331) \"Some\" \"None\" 331) 332)) 332))))) 337) \"Raw\" 339) 339)) ((reduce (attr (account_of_seed \"charlie\" 308) \"public_key_hash\" 308) 308) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 308) \"secret_key\" 308) 308) (pack (tuple 337 (literal (chain_id_cst \"0x9caecab9\") 321) (tuple 337 (literal (intOrNat 4) 337) (lambda 0 \"\" 337 ((set_type (lambdaParams 0 \"\" 337 (unknown 17)) \"unit\" 330) (result (list 332 (transfer (literal (intOrNat 1) 332) (literal (mutez 0) 332) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 331) \"Some\" \"None\" 331) 332)) 332))))) 337) \"Raw\" 340) 340)) ((reduce (attr (account_of_seed \"dan\" 309) \"public_key_hash\" 309) 309) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 309) \"secret_key\" 309) 309) (pack (tuple 337 (literal (chain_id_cst \"0x9caecab9\") 321) (tuple 337 (literal (intOrNat 4) 337) (lambda 0 \"\" 337 ((set_type (lambdaParams 0 \"\" 337 (unknown 17)) \"unit\" 330) (result (list 332 (transfer (literal (intOrNat 1) 332) (literal (mutez 0) 332) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 331) \"Some\" \"None\" 331) 332)) 332))))) 337) \"Raw\" 341) 341))) (tuple 353 (literal (chain_id_cst \"0x9caecab9\") 321) (tuple 353 (literal (intOrNat 4) 353) (lambda 1 \"\" 353 ((set_type (lambdaParams 1 \"\" 353 (unknown 18)) \"unit\" 330) (result (list 332 (transfer (literal (intOrNat 1) 332) (literal (mutez 0) 332) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 331) \"Some\" \"None\" 331) 332)) 332))))))", "line_no": 353, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 321)", "time": "(literal (timestamp 123) 350)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 353)", "show": true, "valid": "(literal (bool False) 353)", "voting_powers": "(map 353 )"}]}, {"shortname": "addExecutionRequest_-_fails_with_bad_chain_id", "longname": "addExecutionRequest - fails with bad chain id", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 66 (nonce (literal (nat 0) 67)) (operator_public_keys (list 66 (reduce (attr (account_of_seed \"alice\" 364) \"public_key\" 364) 364) (reduce (attr (account_of_seed \"bob\" 365) \"public_key\" 365) 365) (reduce (attr (account_of_seed \"charlie\" 366) \"public_key\" 366) 366) (reduce (attr (account_of_seed \"dan\" 367) \"public_key\" 367) 367) (reduce (attr (account_of_seed \"eve\" 368) \"public_key\" 368) 368))) (signers_threshold (literal (intOrNat 3) 66)) (timelock (type_annotation (big_map 75 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 75)) (timelock_seconds (literal (nat 3600) 63)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 86) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 88) (match_tuple 89 (params 86) \"match_pair_89_fst\" \"match_pair_89_snd\") (match_tuple 92 (variant_arg \"match_pair_89_snd\" 89) \"match_pair_92_fst\" \"match_pair_92_snd\") (match_tuple 93 (variant_arg \"match_pair_92_snd\" 92) \"match_pair_93_fst\" \"match_pair_93_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_92_fst\" 92) (unknown 19) 96) 96) (pack (type_annotation (chain_id) (unknown 19) 96) 96) 96) (literal (string \"BAD_CHAIN_ID\") 96) 96) (verify (eq (variant_arg \"match_pair_93_fst\" 93) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 99) 99) 99) (literal (string \"BAD_NONCE\") 99) 99) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 102) 102) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 103) ((ifBlock (contains (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 106) ((verify (check_signature (iter \"operator_public_key\" 103) (getItem (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 107) (pack (variant_arg \"match_pair_89_snd\" 89) 107) 107) (literal (string \"BAD_SIGNATURE\") 107) 107) (set (getLocal \"valid_signatures_counter\" 376) (add (getLocal \"valid_signatures_counter\" 108) (literal (intOrNat 1) 108) 108) 108)) 106)) 103) (verify (ge (getLocal \"valid_signatures_counter\" 111) (attr (data) \"signers_threshold\" 111) 111) (literal (string \"TOO_FEW_SIGS\") 111) 111) (set (attr (data) \"nonce\" 99) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 114) 114) 114) (set (getItem (attr (data) \"timelock\" 117) (attr (data) \"nonce\" 99) 117) (tuple 117 (now) (variant_arg \"match_pair_93_snd\" 93)) 117))) (execute True ((match_tuple 126 (getItem (attr (data) \"timelock\" 117) (params 123) 125) \"match_pair_126_fst\" \"match_pair_126_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_126_fst\" 126) (toInt (attr (data) \"timelock_seconds\" 129) 129) 129) (now) 130) (literal (string \"TOO_EARLY\") 130) 130) (delItem (attr (data) \"timelock\" 117) (params 123) 133) (set_type (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) (list \"operation\") 137) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) ((set (operations 138) (cons (iter \"op\" 138) (operations 138) 138) 138)) 138))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 376, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 152 (admin (literal (local-address 0) 66)) (storedValue (literal (intOrNat 0) 152)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 160) 160) (literal (string \"NOT_ADMIN\") 160) 160) (set (attr (data) \"storedValue\" 161) (params 159) 161))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 383, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 410 (map 410 ((reduce (attr (account_of_seed \"bob\" 365) \"public_key_hash\" 365) 365) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 365) \"secret_key\" 365) 365) (pack (tuple 395 (literal (chain_id_cst \"0x9caecab9\") 379) (tuple 395 (literal (intOrNat 1) 395) (lambda 0 \"\" 395 ((set_type (lambdaParams 0 \"\" 395 (unknown 23)) \"unit\" 388) (result (list 390 (transfer (literal (intOrNat 1) 390) (literal (mutez 0) 390) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 389) \"Some\" \"None\" 389) 390)) 390))))) 395) \"Raw\" 397) 397)) ((reduce (attr (account_of_seed \"charlie\" 366) \"public_key_hash\" 366) 366) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 366) \"secret_key\" 366) 366) (pack (tuple 395 (literal (chain_id_cst \"0x9caecab9\") 379) (tuple 395 (literal (intOrNat 1) 395) (lambda 0 \"\" 395 ((set_type (lambdaParams 0 \"\" 395 (unknown 23)) \"unit\" 388) (result (list 390 (transfer (literal (intOrNat 1) 390) (literal (mutez 0) 390) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 389) \"Some\" \"None\" 389) 390)) 390))))) 395) \"Raw\" 398) 398)) ((reduce (attr (account_of_seed \"dan\" 367) \"public_key_hash\" 367) 367) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 367) \"secret_key\" 367) 367) (pack (tuple 395 (literal (chain_id_cst \"0x9caecab9\") 379) (tuple 395 (literal (intOrNat 1) 395) (lambda 0 \"\" 395 ((set_type (lambdaParams 0 \"\" 395 (unknown 23)) \"unit\" 388) (result (list 390 (transfer (literal (intOrNat 1) 390) (literal (mutez 0) 390) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 389) \"Some\" \"None\" 389) 390)) 390))))) 395) \"Raw\" 399) 399))) (tuple 410 (literal (chain_id_cst \"0x9caecab9\") 379) (tuple 410 (literal (intOrNat 1) 410) (lambda 1 \"\" 410 ((set_type (lambdaParams 1 \"\" 410 (unknown 24)) \"unit\" 388) (result (list 390 (transfer (literal (intOrNat 1) 390) (literal (mutez 0) 390) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 389) \"Some\" \"None\" 389) 390)) 390))))))", "line_no": 410, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x0011223344\") 411)", "time": "(literal (timestamp 123) 409)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 410)", "show": true, "valid": "(literal (bool False) 410)", "voting_powers": "(map 410 )"}]}, {"shortname": "addExecutionRequest_-_fails_with_less_than_threshold_signatures", "longname": "addExecutionRequest - fails with less than threshold signatures", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 66 (nonce (literal (nat 0) 67)) (operator_public_keys (list 66 (reduce (attr (account_of_seed \"alice\" 422) \"public_key\" 422) 422) (reduce (attr (account_of_seed \"bob\" 423) \"public_key\" 423) 423) (reduce (attr (account_of_seed \"charlie\" 424) \"public_key\" 424) 424) (reduce (attr (account_of_seed \"dan\" 425) \"public_key\" 425) 425) (reduce (attr (account_of_seed \"eve\" 426) \"public_key\" 426) 426))) (signers_threshold (literal (intOrNat 3) 66)) (timelock (type_annotation (big_map 75 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 75)) (timelock_seconds (literal (nat 3600) 63)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 86) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 88) (match_tuple 89 (params 86) \"match_pair_89_fst\" \"match_pair_89_snd\") (match_tuple 92 (variant_arg \"match_pair_89_snd\" 89) \"match_pair_92_fst\" \"match_pair_92_snd\") (match_tuple 93 (variant_arg \"match_pair_92_snd\" 92) \"match_pair_93_fst\" \"match_pair_93_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_92_fst\" 92) (unknown 25) 96) 96) (pack (type_annotation (chain_id) (unknown 25) 96) 96) 96) (literal (string \"BAD_CHAIN_ID\") 96) 96) (verify (eq (variant_arg \"match_pair_93_fst\" 93) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 99) 99) 99) (literal (string \"BAD_NONCE\") 99) 99) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 102) 102) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 103) ((ifBlock (contains (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 106) ((verify (check_signature (iter \"operator_public_key\" 103) (getItem (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 107) (pack (variant_arg \"match_pair_89_snd\" 89) 107) 107) (literal (string \"BAD_SIGNATURE\") 107) 107) (set (getLocal \"valid_signatures_counter\" 434) (add (getLocal \"valid_signatures_counter\" 108) (literal (intOrNat 1) 108) 108) 108)) 106)) 103) (verify (ge (getLocal \"valid_signatures_counter\" 111) (attr (data) \"signers_threshold\" 111) 111) (literal (string \"TOO_FEW_SIGS\") 111) 111) (set (attr (data) \"nonce\" 99) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 114) 114) 114) (set (getItem (attr (data) \"timelock\" 117) (attr (data) \"nonce\" 99) 117) (tuple 117 (now) (variant_arg \"match_pair_93_snd\" 93)) 117))) (execute True ((match_tuple 126 (getItem (attr (data) \"timelock\" 117) (params 123) 125) \"match_pair_126_fst\" \"match_pair_126_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_126_fst\" 126) (toInt (attr (data) \"timelock_seconds\" 129) 129) 129) (now) 130) (literal (string \"TOO_EARLY\") 130) 130) (delItem (attr (data) \"timelock\" 117) (params 123) 133) (set_type (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) (list \"operation\") 137) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) ((set (operations 138) (cons (iter \"op\" 138) (operations 138) 138) 138)) 138))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 434, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 152 (admin (literal (local-address 0) 66)) (storedValue (literal (intOrNat 0) 152)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 160) 160) (literal (string \"NOT_ADMIN\") 160) 160) (set (attr (data) \"storedValue\" 161) (params 159) 161))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 441, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 467 (map 467 ((reduce (attr (account_of_seed \"bob\" 423) \"public_key_hash\" 423) 423) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 423) \"secret_key\" 423) 423) (pack (tuple 453 (literal (chain_id_cst \"0x9caecab9\") 437) (tuple 453 (literal (intOrNat 1) 453) (lambda 0 \"\" 453 ((set_type (lambdaParams 0 \"\" 453 (unknown 29)) \"unit\" 446) (result (list 448 (transfer (literal (intOrNat 1) 448) (literal (mutez 0) 448) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 447) \"Some\" \"None\" 447) 448)) 448))))) 453) \"Raw\" 455) 455)) ((reduce (attr (account_of_seed \"charlie\" 424) \"public_key_hash\" 424) 424) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 424) \"secret_key\" 424) 424) (pack (tuple 453 (literal (chain_id_cst \"0x9caecab9\") 437) (tuple 453 (literal (intOrNat 1) 453) (lambda 0 \"\" 453 ((set_type (lambdaParams 0 \"\" 453 (unknown 29)) \"unit\" 446) (result (list 448 (transfer (literal (intOrNat 1) 448) (literal (mutez 0) 448) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 447) \"Some\" \"None\" 447) 448)) 448))))) 453) \"Raw\" 456) 456))) (tuple 467 (literal (chain_id_cst \"0x9caecab9\") 437) (tuple 467 (literal (intOrNat 1) 467) (lambda 1 \"\" 467 ((set_type (lambdaParams 1 \"\" 467 (unknown 30)) \"unit\" 446) (result (list 448 (transfer (literal (intOrNat 1) 448) (literal (mutez 0) 448) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 447) \"Some\" \"None\" 447) 448)) 448))))))", "line_no": 467, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 437)", "time": "(literal (timestamp 123) 464)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 467)", "show": true, "valid": "(literal (bool False) 467)", "voting_powers": "(map 467 )"}]}, {"shortname": "execute_-_succeeds_after_timelock", "longname": "execute - succeeds after timelock", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 66 (nonce (literal (nat 0) 67)) (operator_public_keys (list 66 (reduce (attr (account_of_seed \"alice\" 540) \"public_key\" 540) 540) (reduce (attr (account_of_seed \"bob\" 541) \"public_key\" 541) 541) (reduce (attr (account_of_seed \"charlie\" 542) \"public_key\" 542) 542) (reduce (attr (account_of_seed \"dan\" 543) \"public_key\" 543) 543) (reduce (attr (account_of_seed \"eve\" 544) \"public_key\" 544) 544))) (signers_threshold (literal (intOrNat 3) 66)) (timelock (type_annotation (big_map 75 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 75)) (timelock_seconds (literal (nat 1) 548)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 86) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 88) (match_tuple 89 (params 86) \"match_pair_89_fst\" \"match_pair_89_snd\") (match_tuple 92 (variant_arg \"match_pair_89_snd\" 89) \"match_pair_92_fst\" \"match_pair_92_snd\") (match_tuple 93 (variant_arg \"match_pair_92_snd\" 92) \"match_pair_93_fst\" \"match_pair_93_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_92_fst\" 92) (unknown 31) 96) 96) (pack (type_annotation (chain_id) (unknown 31) 96) 96) 96) (literal (string \"BAD_CHAIN_ID\") 96) 96) (verify (eq (variant_arg \"match_pair_93_fst\" 93) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 99) 99) 99) (literal (string \"BAD_NONCE\") 99) 99) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 102) 102) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 103) ((ifBlock (contains (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 106) ((verify (check_signature (iter \"operator_public_key\" 103) (getItem (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 107) (pack (variant_arg \"match_pair_89_snd\" 89) 107) 107) (literal (string \"BAD_SIGNATURE\") 107) 107) (set (getLocal \"valid_signatures_counter\" 554) (add (getLocal \"valid_signatures_counter\" 108) (literal (intOrNat 1) 108) 108) 108)) 106)) 103) (verify (ge (getLocal \"valid_signatures_counter\" 111) (attr (data) \"signers_threshold\" 111) 111) (literal (string \"TOO_FEW_SIGS\") 111) 111) (set (attr (data) \"nonce\" 99) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 114) 114) 114) (set (getItem (attr (data) \"timelock\" 117) (attr (data) \"nonce\" 99) 117) (tuple 117 (now) (variant_arg \"match_pair_93_snd\" 93)) 117))) (execute True ((match_tuple 126 (getItem (attr (data) \"timelock\" 117) (params 123) 125) \"match_pair_126_fst\" \"match_pair_126_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_126_fst\" 126) (toInt (attr (data) \"timelock_seconds\" 129) 129) 129) (now) 130) (literal (string \"TOO_EARLY\") 130) 130) (delItem (attr (data) \"timelock\" 117) (params 123) 133) (set_type (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) (list \"operation\") 137) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) ((set (operations 138) (cons (iter \"op\" 138) (operations 138) 138) 138)) 138))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 554, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 152 (admin (literal (local-address 0) 66)) (storedValue (literal (intOrNat 0) 152)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 160) 160) (literal (string \"NOT_ADMIN\") 160) 160) (set (attr (data) \"storedValue\" 161) (params 159) 161))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 561, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 588 (map 588 ((reduce (attr (account_of_seed \"bob\" 541) \"public_key_hash\" 541) 541) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 541) \"secret_key\" 541) 541) (pack (tuple 574 (literal (chain_id_cst \"0x9caecab9\") 557) (tuple 574 (literal (intOrNat 1) 574) (lambda 0 \"\" 574 ((set_type (lambdaParams 0 \"\" 574 (unknown 35)) \"unit\" 567) (result (list 569 (transfer (literal (nat 1) 565) (literal (mutez 0) 569) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 568) \"Some\" \"None\" 568) 569)) 569))))) 574) \"Raw\" 576) 576)) ((reduce (attr (account_of_seed \"charlie\" 542) \"public_key_hash\" 542) 542) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 542) \"secret_key\" 542) 542) (pack (tuple 574 (literal (chain_id_cst \"0x9caecab9\") 557) (tuple 574 (literal (intOrNat 1) 574) (lambda 0 \"\" 574 ((set_type (lambdaParams 0 \"\" 574 (unknown 35)) \"unit\" 567) (result (list 569 (transfer (literal (nat 1) 565) (literal (mutez 0) 569) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 568) \"Some\" \"None\" 568) 569)) 569))))) 574) \"Raw\" 577) 577)) ((reduce (attr (account_of_seed \"dan\" 543) \"public_key_hash\" 543) 543) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 543) \"secret_key\" 543) 543) (pack (tuple 574 (literal (chain_id_cst \"0x9caecab9\") 557) (tuple 574 (literal (intOrNat 1) 574) (lambda 0 \"\" 574 ((set_type (lambdaParams 0 \"\" 574 (unknown 35)) \"unit\" 567) (result (list 569 (transfer (literal (nat 1) 565) (literal (mutez 0) 569) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 568) \"Some\" \"None\" 568) 569)) 569))))) 574) \"Raw\" 578) 578))) (tuple 588 (literal (chain_id_cst \"0x9caecab9\") 557) (tuple 588 (literal (intOrNat 1) 588) (lambda 1 \"\" 588 ((set_type (lambdaParams 1 \"\" 588 (unknown 36)) \"unit\" 567) (result (list 569 (transfer (literal (nat 1) 565) (literal (mutez 0) 569) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 568) \"Some\" \"None\" 568) 569)) 569))))))", "line_no": 588, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 557)", "time": "(literal (timestamp 123) 587)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 588)", "show": true, "valid": "(literal (bool True) 588)", "voting_powers": "(map 588 )"}, {"action": "message", "id": 0, "message": "execute", "params": "(literal (intOrNat 1) 595)", "line_no": 595, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": "(add_seconds (literal (timestamp 123) 587) (mul (literal (nat 1) 548) (literal (intOrNat 2) 594) 594) 594)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 595)", "show": true, "valid": "(literal (bool True) 595)", "voting_powers": "(map 595 )"}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 595) \"timelock\" 600) (literal (intOrNat 1) 600) 600) (literal (bool False) 600) 600)", "line_no": 600}, {"action": "verify", "condition": "(eq (attr (contractData 1 561) \"storedValue\" 603) (literal (nat 1) 565) 603)", "line_no": 603}]}, {"shortname": "execute_-_fails_before_timelock", "longname": "execute - fails before timelock", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 66 (nonce (literal (nat 0) 67)) (operator_public_keys (list 66 (reduce (attr (account_of_seed \"alice\" 611) \"public_key\" 611) 611) (reduce (attr (account_of_seed \"bob\" 612) \"public_key\" 612) 612) (reduce (attr (account_of_seed \"charlie\" 613) \"public_key\" 613) 613) (reduce (attr (account_of_seed \"dan\" 614) \"public_key\" 614) 614) (reduce (attr (account_of_seed \"eve\" 615) \"public_key\" 615) 615))) (signers_threshold (literal (intOrNat 3) 66)) (timelock (type_annotation (big_map 75 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 75)) (timelock_seconds (literal (nat 1) 619)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 86) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 88) (match_tuple 89 (params 86) \"match_pair_89_fst\" \"match_pair_89_snd\") (match_tuple 92 (variant_arg \"match_pair_89_snd\" 89) \"match_pair_92_fst\" \"match_pair_92_snd\") (match_tuple 93 (variant_arg \"match_pair_92_snd\" 92) \"match_pair_93_fst\" \"match_pair_93_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_92_fst\" 92) (unknown 37) 96) 96) (pack (type_annotation (chain_id) (unknown 37) 96) 96) 96) (literal (string \"BAD_CHAIN_ID\") 96) 96) (verify (eq (variant_arg \"match_pair_93_fst\" 93) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 99) 99) 99) (literal (string \"BAD_NONCE\") 99) 99) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 102) 102) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 103) ((ifBlock (contains (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 106) ((verify (check_signature (iter \"operator_public_key\" 103) (getItem (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 107) (pack (variant_arg \"match_pair_89_snd\" 89) 107) 107) (literal (string \"BAD_SIGNATURE\") 107) 107) (set (getLocal \"valid_signatures_counter\" 625) (add (getLocal \"valid_signatures_counter\" 108) (literal (intOrNat 1) 108) 108) 108)) 106)) 103) (verify (ge (getLocal \"valid_signatures_counter\" 111) (attr (data) \"signers_threshold\" 111) 111) (literal (string \"TOO_FEW_SIGS\") 111) 111) (set (attr (data) \"nonce\" 99) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 114) 114) 114) (set (getItem (attr (data) \"timelock\" 117) (attr (data) \"nonce\" 99) 117) (tuple 117 (now) (variant_arg \"match_pair_93_snd\" 93)) 117))) (execute True ((match_tuple 126 (getItem (attr (data) \"timelock\" 117) (params 123) 125) \"match_pair_126_fst\" \"match_pair_126_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_126_fst\" 126) (toInt (attr (data) \"timelock_seconds\" 129) 129) 129) (now) 130) (literal (string \"TOO_EARLY\") 130) 130) (delItem (attr (data) \"timelock\" 117) (params 123) 133) (set_type (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) (list \"operation\") 137) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) ((set (operations 138) (cons (iter \"op\" 138) (operations 138) 138) 138)) 138))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 625, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 152 (admin (literal (local-address 0) 66)) (storedValue (literal (intOrNat 0) 152)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 160) 160) (literal (string \"NOT_ADMIN\") 160) 160) (set (attr (data) \"storedValue\" 161) (params 159) 161))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 632, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 658 (map 658 ((reduce (attr (account_of_seed \"bob\" 612) \"public_key_hash\" 612) 612) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 612) \"secret_key\" 612) 612) (pack (tuple 644 (literal (chain_id_cst \"0x9caecab9\") 628) (tuple 644 (literal (intOrNat 1) 644) (lambda 0 \"\" 644 ((set_type (lambdaParams 0 \"\" 644 (unknown 41)) \"unit\" 637) (result (list 639 (transfer (literal (nat 1) 635) (literal (mutez 0) 639) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 638) \"Some\" \"None\" 638) 639)) 639))))) 644) \"Raw\" 646) 646)) ((reduce (attr (account_of_seed \"charlie\" 613) \"public_key_hash\" 613) 613) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 613) \"secret_key\" 613) 613) (pack (tuple 644 (literal (chain_id_cst \"0x9caecab9\") 628) (tuple 644 (literal (intOrNat 1) 644) (lambda 0 \"\" 644 ((set_type (lambdaParams 0 \"\" 644 (unknown 41)) \"unit\" 637) (result (list 639 (transfer (literal (nat 1) 635) (literal (mutez 0) 639) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 638) \"Some\" \"None\" 638) 639)) 639))))) 644) \"Raw\" 647) 647)) ((reduce (attr (account_of_seed \"dan\" 614) \"public_key_hash\" 614) 614) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 614) \"secret_key\" 614) 614) (pack (tuple 644 (literal (chain_id_cst \"0x9caecab9\") 628) (tuple 644 (literal (intOrNat 1) 644) (lambda 0 \"\" 644 ((set_type (lambdaParams 0 \"\" 644 (unknown 41)) \"unit\" 637) (result (list 639 (transfer (literal (nat 1) 635) (literal (mutez 0) 639) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 638) \"Some\" \"None\" 638) 639)) 639))))) 644) \"Raw\" 648) 648))) (tuple 658 (literal (chain_id_cst \"0x9caecab9\") 628) (tuple 658 (literal (intOrNat 1) 658) (lambda 1 \"\" 658 ((set_type (lambdaParams 1 \"\" 658 (unknown 42)) \"unit\" 637) (result (list 639 (transfer (literal (nat 1) 635) (literal (mutez 0) 639) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 638) \"Some\" \"None\" 638) 639)) 639))))))", "line_no": 658, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 628)", "time": "(literal (timestamp 123) 657)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 658)", "show": true, "valid": "(literal (bool True) 658)", "voting_powers": "(map 658 )"}, {"action": "message", "id": 0, "message": "execute", "params": "(literal (intOrNat 1) 664)", "line_no": 664, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": "(literal (timestamp 123) 657)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 664)", "show": true, "valid": "(literal (bool False) 664)", "voting_powers": "(map 664 )"}]}, {"shortname": "execute_-_executes_multiple_operations_in_the_correct_order", "longname": "execute - executes multiple operations in the correct order", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 66 (nonce (literal (nat 0) 67)) (operator_public_keys (list 66 (reduce (attr (account_of_seed \"alice\" 674) \"public_key\" 674) 674) (reduce (attr (account_of_seed \"bob\" 675) \"public_key\" 675) 675) (reduce (attr (account_of_seed \"charlie\" 676) \"public_key\" 676) 676) (reduce (attr (account_of_seed \"dan\" 677) \"public_key\" 677) 677) (reduce (attr (account_of_seed \"eve\" 678) \"public_key\" 678) 678))) (signers_threshold (literal (intOrNat 3) 66)) (timelock (type_annotation (big_map 75 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 75)) (timelock_seconds (literal (nat 1) 682)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 86) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 88) (match_tuple 89 (params 86) \"match_pair_89_fst\" \"match_pair_89_snd\") (match_tuple 92 (variant_arg \"match_pair_89_snd\" 89) \"match_pair_92_fst\" \"match_pair_92_snd\") (match_tuple 93 (variant_arg \"match_pair_92_snd\" 92) \"match_pair_93_fst\" \"match_pair_93_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_92_fst\" 92) (unknown 43) 96) 96) (pack (type_annotation (chain_id) (unknown 43) 96) 96) 96) (literal (string \"BAD_CHAIN_ID\") 96) 96) (verify (eq (variant_arg \"match_pair_93_fst\" 93) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 99) 99) 99) (literal (string \"BAD_NONCE\") 99) 99) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 102) 102) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 103) ((ifBlock (contains (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 106) ((verify (check_signature (iter \"operator_public_key\" 103) (getItem (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 107) (pack (variant_arg \"match_pair_89_snd\" 89) 107) 107) (literal (string \"BAD_SIGNATURE\") 107) 107) (set (getLocal \"valid_signatures_counter\" 688) (add (getLocal \"valid_signatures_counter\" 108) (literal (intOrNat 1) 108) 108) 108)) 106)) 103) (verify (ge (getLocal \"valid_signatures_counter\" 111) (attr (data) \"signers_threshold\" 111) 111) (literal (string \"TOO_FEW_SIGS\") 111) 111) (set (attr (data) \"nonce\" 99) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 114) 114) 114) (set (getItem (attr (data) \"timelock\" 117) (attr (data) \"nonce\" 99) 117) (tuple 117 (now) (variant_arg \"match_pair_93_snd\" 93)) 117))) (execute True ((match_tuple 126 (getItem (attr (data) \"timelock\" 117) (params 123) 125) \"match_pair_126_fst\" \"match_pair_126_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_126_fst\" 126) (toInt (attr (data) \"timelock_seconds\" 129) 129) 129) (now) 130) (literal (string \"TOO_EARLY\") 130) 130) (delItem (attr (data) \"timelock\" 117) (params 123) 133) (set_type (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) (list \"operation\") 137) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) ((set (operations 138) (cons (iter \"op\" 138) (operations 138) 138) 138)) 138))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 688, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 152 (admin (literal (local-address 0) 66)) (storedValue (literal (intOrNat 0) 152)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 160) 160) (literal (string \"NOT_ADMIN\") 160) 160) (set (attr (data) \"storedValue\" 161) (params 159) 161))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 695, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 724 (map 724 ((reduce (attr (account_of_seed \"bob\" 675) \"public_key_hash\" 675) 675) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 675) \"secret_key\" 675) 675) (pack (tuple 710 (literal (chain_id_cst \"0x9caecab9\") 691) (tuple 710 (literal (intOrNat 1) 710) (lambda 0 \"\" 710 ((set_type (lambdaParams 0 \"\" 710 (unknown 47)) \"unit\" 700) (result (list 702 (transfer (literal (nat 1) 703) (literal (mutez 0) 703) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 701) \"Some\" \"None\" 701) 703) (transfer (literal (nat 2) 698) (literal (mutez 0) 704) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 701) \"Some\" \"None\" 701) 704)) 702))))) 710) \"Raw\" 712) 712)) ((reduce (attr (account_of_seed \"charlie\" 676) \"public_key_hash\" 676) 676) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 676) \"secret_key\" 676) 676) (pack (tuple 710 (literal (chain_id_cst \"0x9caecab9\") 691) (tuple 710 (literal (intOrNat 1) 710) (lambda 0 \"\" 710 ((set_type (lambdaParams 0 \"\" 710 (unknown 47)) \"unit\" 700) (result (list 702 (transfer (literal (nat 1) 703) (literal (mutez 0) 703) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 701) \"Some\" \"None\" 701) 703) (transfer (literal (nat 2) 698) (literal (mutez 0) 704) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 701) \"Some\" \"None\" 701) 704)) 702))))) 710) \"Raw\" 713) 713)) ((reduce (attr (account_of_seed \"dan\" 677) \"public_key_hash\" 677) 677) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 677) \"secret_key\" 677) 677) (pack (tuple 710 (literal (chain_id_cst \"0x9caecab9\") 691) (tuple 710 (literal (intOrNat 1) 710) (lambda 0 \"\" 710 ((set_type (lambdaParams 0 \"\" 710 (unknown 47)) \"unit\" 700) (result (list 702 (transfer (literal (nat 1) 703) (literal (mutez 0) 703) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 701) \"Some\" \"None\" 701) 703) (transfer (literal (nat 2) 698) (literal (mutez 0) 704) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 701) \"Some\" \"None\" 701) 704)) 702))))) 710) \"Raw\" 714) 714))) (tuple 724 (literal (chain_id_cst \"0x9caecab9\") 691) (tuple 724 (literal (intOrNat 1) 724) (lambda 1 \"\" 724 ((set_type (lambdaParams 1 \"\" 724 (unknown 48)) \"unit\" 700) (result (list 702 (transfer (literal (nat 1) 703) (literal (mutez 0) 703) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 701) \"Some\" \"None\" 701) 703) (transfer (literal (nat 2) 698) (literal (mutez 0) 704) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 701) \"Some\" \"None\" 701) 704)) 702))))))", "line_no": 724, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 691)", "time": "(literal (timestamp 123) 723)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 724)", "show": true, "valid": "(literal (bool True) 724)", "voting_powers": "(map 724 )"}, {"action": "message", "id": 0, "message": "execute", "params": "(literal (intOrNat 1) 731)", "line_no": 731, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": "(add_seconds (literal (timestamp 123) 723) (mul (literal (nat 1) 682) (literal (intOrNat 2) 730) 730) 730)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 731)", "show": true, "valid": "(literal (bool True) 731)", "voting_powers": "(map 731 )"}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 731) \"timelock\" 736) (literal (intOrNat 1) 736) 736) (literal (bool False) 736) 736)", "line_no": 736}, {"action": "verify", "condition": "(eq (attr (contractData 1 695) \"storedValue\" 739) (literal (nat 2) 698) 739)", "line_no": 739}]}, {"shortname": "execute_-_able_to_timelock_and_execute_multiple_operations", "longname": "execute - able to timelock and execute multiple operations", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 66 (nonce (literal (nat 0) 67)) (operator_public_keys (list 66 (reduce (attr (account_of_seed \"alice\" 746) \"public_key\" 746) 746) (reduce (attr (account_of_seed \"bob\" 747) \"public_key\" 747) 747) (reduce (attr (account_of_seed \"charlie\" 748) \"public_key\" 748) 748) (reduce (attr (account_of_seed \"dan\" 749) \"public_key\" 749) 749) (reduce (attr (account_of_seed \"eve\" 750) \"public_key\" 750) 750))) (signers_threshold (literal (intOrNat 3) 66)) (timelock (type_annotation (big_map 75 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 75)) (timelock_seconds (literal (nat 1) 754)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 86) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 88) (match_tuple 89 (params 86) \"match_pair_89_fst\" \"match_pair_89_snd\") (match_tuple 92 (variant_arg \"match_pair_89_snd\" 89) \"match_pair_92_fst\" \"match_pair_92_snd\") (match_tuple 93 (variant_arg \"match_pair_92_snd\" 92) \"match_pair_93_fst\" \"match_pair_93_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_92_fst\" 92) (unknown 49) 96) 96) (pack (type_annotation (chain_id) (unknown 49) 96) 96) 96) (literal (string \"BAD_CHAIN_ID\") 96) 96) (verify (eq (variant_arg \"match_pair_93_fst\" 93) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 99) 99) 99) (literal (string \"BAD_NONCE\") 99) 99) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 102) 102) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 103) ((ifBlock (contains (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 106) ((verify (check_signature (iter \"operator_public_key\" 103) (getItem (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 107) (pack (variant_arg \"match_pair_89_snd\" 89) 107) 107) (literal (string \"BAD_SIGNATURE\") 107) 107) (set (getLocal \"valid_signatures_counter\" 760) (add (getLocal \"valid_signatures_counter\" 108) (literal (intOrNat 1) 108) 108) 108)) 106)) 103) (verify (ge (getLocal \"valid_signatures_counter\" 111) (attr (data) \"signers_threshold\" 111) 111) (literal (string \"TOO_FEW_SIGS\") 111) 111) (set (attr (data) \"nonce\" 99) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 114) 114) 114) (set (getItem (attr (data) \"timelock\" 117) (attr (data) \"nonce\" 99) 117) (tuple 117 (now) (variant_arg \"match_pair_93_snd\" 93)) 117))) (execute True ((match_tuple 126 (getItem (attr (data) \"timelock\" 117) (params 123) 125) \"match_pair_126_fst\" \"match_pair_126_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_126_fst\" 126) (toInt (attr (data) \"timelock_seconds\" 129) 129) 129) (now) 130) (literal (string \"TOO_EARLY\") 130) 130) (delItem (attr (data) \"timelock\" 117) (params 123) 133) (set_type (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) (list \"operation\") 137) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) ((set (operations 138) (cons (iter \"op\" 138) (operations 138) 138) 138)) 138))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 760, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 152 (admin (literal (local-address 0) 66)) (storedValue (literal (intOrNat 0) 152)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 160) 160) (literal (string \"NOT_ADMIN\") 160) 160) (set (attr (data) \"storedValue\" 161) (params 159) 161))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 767, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 802 (map 802 ((reduce (attr (account_of_seed \"bob\" 747) \"public_key_hash\" 747) 747) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 747) \"secret_key\" 747) 747) (pack (tuple 789 (literal (chain_id_cst \"0x9caecab9\") 763) (tuple 789 (literal (intOrNat 1) 789) (lambda 0 \"\" 789 ((set_type (lambdaParams 0 \"\" 789 (unknown 53)) \"unit\" 772) (result (list 774 (transfer (literal (nat 1) 770) (literal (mutez 0) 775) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 773) \"Some\" \"None\" 773) 775)) 774))))) 789) \"Raw\" 791) 791)) ((reduce (attr (account_of_seed \"charlie\" 748) \"public_key_hash\" 748) 748) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 748) \"secret_key\" 748) 748) (pack (tuple 789 (literal (chain_id_cst \"0x9caecab9\") 763) (tuple 789 (literal (intOrNat 1) 789) (lambda 0 \"\" 789 ((set_type (lambdaParams 0 \"\" 789 (unknown 53)) \"unit\" 772) (result (list 774 (transfer (literal (nat 1) 770) (literal (mutez 0) 775) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 773) \"Some\" \"None\" 773) 775)) 774))))) 789) \"Raw\" 792) 792)) ((reduce (attr (account_of_seed \"dan\" 749) \"public_key_hash\" 749) 749) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 749) \"secret_key\" 749) 749) (pack (tuple 789 (literal (chain_id_cst \"0x9caecab9\") 763) (tuple 789 (literal (intOrNat 1) 789) (lambda 0 \"\" 789 ((set_type (lambdaParams 0 \"\" 789 (unknown 53)) \"unit\" 772) (result (list 774 (transfer (literal (nat 1) 770) (literal (mutez 0) 775) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 773) \"Some\" \"None\" 773) 775)) 774))))) 789) \"Raw\" 793) 793))) (tuple 802 (literal (chain_id_cst \"0x9caecab9\") 763) (tuple 802 (literal (intOrNat 1) 802) (lambda 1 \"\" 802 ((set_type (lambdaParams 1 \"\" 802 (unknown 54)) \"unit\" 772) (result (list 774 (transfer (literal (nat 1) 770) (literal (mutez 0) 775) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 773) \"Some\" \"None\" 773) 775)) 774))))))", "line_no": 802, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 763)", "time": "(literal (timestamp 123) 801)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 802)", "show": true, "valid": "(literal (bool True) 802)", "voting_powers": "(map 802 )"}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 823 (map 823 ((reduce (attr (account_of_seed \"bob\" 747) \"public_key_hash\" 747) 747) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 747) \"secret_key\" 747) 747) (pack (tuple 810 (literal (chain_id_cst \"0x9caecab9\") 763) (tuple 810 (literal (intOrNat 2) 810) (lambda 2 \"\" 810 ((set_type (lambdaParams 2 \"\" 810 (unknown 55)) \"unit\" 780) (result (list 782 (transfer (literal (nat 2) 778) (literal (mutez 0) 783) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 781) \"Some\" \"None\" 781) 783)) 782))))) 810) \"Raw\" 812) 812)) ((reduce (attr (account_of_seed \"charlie\" 748) \"public_key_hash\" 748) 748) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 748) \"secret_key\" 748) 748) (pack (tuple 810 (literal (chain_id_cst \"0x9caecab9\") 763) (tuple 810 (literal (intOrNat 2) 810) (lambda 2 \"\" 810 ((set_type (lambdaParams 2 \"\" 810 (unknown 55)) \"unit\" 780) (result (list 782 (transfer (literal (nat 2) 778) (literal (mutez 0) 783) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 781) \"Some\" \"None\" 781) 783)) 782))))) 810) \"Raw\" 813) 813)) ((reduce (attr (account_of_seed \"dan\" 749) \"public_key_hash\" 749) 749) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 749) \"secret_key\" 749) 749) (pack (tuple 810 (literal (chain_id_cst \"0x9caecab9\") 763) (tuple 810 (literal (intOrNat 2) 810) (lambda 2 \"\" 810 ((set_type (lambdaParams 2 \"\" 810 (unknown 55)) \"unit\" 780) (result (list 782 (transfer (literal (nat 2) 778) (literal (mutez 0) 783) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 781) \"Some\" \"None\" 781) 783)) 782))))) 810) \"Raw\" 814) 814))) (tuple 823 (literal (chain_id_cst \"0x9caecab9\") 763) (tuple 823 (literal (intOrNat 2) 823) (lambda 3 \"\" 823 ((set_type (lambdaParams 3 \"\" 823 (unknown 56)) \"unit\" 780) (result (list 782 (transfer (literal (nat 2) 778) (literal (mutez 0) 783) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 781) \"Some\" \"None\" 781) 783)) 782))))))", "line_no": 823, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 763)", "time": "(literal (timestamp 123) 822)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 823)", "show": true, "valid": "(literal (bool True) 823)", "voting_powers": "(map 823 )"}, {"action": "message", "id": 0, "message": "execute", "params": "(literal (intOrNat 1) 830)", "line_no": 830, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": "(add_seconds (literal (timestamp 123) 822) (mul (literal (nat 1) 754) (literal (intOrNat 2) 829) 829) 829)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 830)", "show": true, "valid": "(literal (bool True) 830)", "voting_powers": "(map 830 )"}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 830) \"timelock\" 835) (literal (intOrNat 1) 835) 835) (literal (bool False) 835) 835)", "line_no": 835}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 830) \"timelock\" 835) (literal (intOrNat 2) 836) 836) (literal (bool True) 836) 836)", "line_no": 836}, {"action": "verify", "condition": "(eq (attr (contractData 1 767) \"storedValue\" 839) (literal (nat 1) 770) 839)", "line_no": 839}, {"action": "message", "id": 0, "message": "execute", "params": "(literal (intOrNat 2) 843)", "line_no": 843, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": "(add_seconds (add_seconds (literal (timestamp 123) 822) (mul (literal (nat 1) 754) (literal (intOrNat 2) 829) 829) 829) (mul (literal (nat 1) 754) (literal (intOrNat 2) 842) 842) 842)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 843)", "show": true, "valid": "(literal (bool True) 843)", "voting_powers": "(map 843 )"}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 843) \"timelock\" 848) (literal (intOrNat 1) 848) 848) (literal (bool False) 848) 848)", "line_no": 848}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 843) \"timelock\" 848) (literal (intOrNat 2) 849) 849) (literal (bool False) 849) 849)", "line_no": 849}, {"action": "verify", "condition": "(eq (attr (contractData 1 767) \"storedValue\" 839) (literal (nat 2) 778) 852)", "line_no": 852}]}, {"shortname": "addExecutionRequest_-_does_not_count_invalid_signatures", "longname": "addExecutionRequest - does not count invalid signatures", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 66 (nonce (literal (nat 0) 67)) (operator_public_keys (list 66 (reduce (attr (account_of_seed \"alice\" 478) \"public_key\" 478) 478) (reduce (attr (account_of_seed \"bob\" 479) \"public_key\" 479) 479) (reduce (attr (account_of_seed \"charlie\" 480) \"public_key\" 480) 480))) (signers_threshold (literal (intOrNat 3) 66)) (timelock (type_annotation (big_map 75 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 75)) (timelock_seconds (literal (nat 3600) 63)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 86) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 88) (match_tuple 89 (params 86) \"match_pair_89_fst\" \"match_pair_89_snd\") (match_tuple 92 (variant_arg \"match_pair_89_snd\" 89) \"match_pair_92_fst\" \"match_pair_92_snd\") (match_tuple 93 (variant_arg \"match_pair_92_snd\" 92) \"match_pair_93_fst\" \"match_pair_93_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_92_fst\" 92) (unknown 57) 96) 96) (pack (type_annotation (chain_id) (unknown 57) 96) 96) 96) (literal (string \"BAD_CHAIN_ID\") 96) 96) (verify (eq (variant_arg \"match_pair_93_fst\" 93) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 99) 99) 99) (literal (string \"BAD_NONCE\") 99) 99) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 102) 102) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 103) ((ifBlock (contains (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 106) ((verify (check_signature (iter \"operator_public_key\" 103) (getItem (variant_arg \"match_pair_89_fst\" 89) (hash_key (iter \"operator_public_key\" 103) 105) 107) (pack (variant_arg \"match_pair_89_snd\" 89) 107) 107) (literal (string \"BAD_SIGNATURE\") 107) 107) (set (getLocal \"valid_signatures_counter\" 490) (add (getLocal \"valid_signatures_counter\" 108) (literal (intOrNat 1) 108) 108) 108)) 106)) 103) (verify (ge (getLocal \"valid_signatures_counter\" 111) (attr (data) \"signers_threshold\" 111) 111) (literal (string \"TOO_FEW_SIGS\") 111) 111) (set (attr (data) \"nonce\" 99) (add (attr (data) \"nonce\" 99) (literal (intOrNat 1) 114) 114) 114) (set (getItem (attr (data) \"timelock\" 117) (attr (data) \"nonce\" 99) 117) (tuple 117 (now) (variant_arg \"match_pair_93_snd\" 93)) 117))) (execute True ((match_tuple 126 (getItem (attr (data) \"timelock\" 117) (params 123) 125) \"match_pair_126_fst\" \"match_pair_126_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_126_fst\" 126) (toInt (attr (data) \"timelock_seconds\" 129) 129) 129) (now) 130) (literal (string \"TOO_EARLY\") 130) 130) (delItem (attr (data) \"timelock\" 117) (params 123) 133) (set_type (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) (list \"operation\") 137) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_126_snd\" 126) (unit) 136) ((set (operations 138) (cons (iter \"op\" 138) (operations 138) 138) 138)) 138))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 490, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 152 (admin (literal (local-address 0) 66)) (storedValue (literal (intOrNat 0) 152)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 160) 160) (literal (string \"NOT_ADMIN\") 160) 160) (set (attr (data) \"storedValue\" 161) (params 159) 161))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 497, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 525 (map 525 ((reduce (attr (account_of_seed \"charlie\" 480) \"public_key_hash\" 480) 480) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 480) \"secret_key\" 480) 480) (pack (tuple 509 (literal (chain_id_cst \"0x9caecab9\") 493) (tuple 509 (literal (intOrNat 1) 509) (lambda 0 \"\" 509 ((set_type (lambdaParams 0 \"\" 509 (unknown 61)) \"unit\" 502) (result (list 504 (transfer (literal (intOrNat 1) 504) (literal (mutez 0) 504) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 503) \"Some\" \"None\" 503) 504)) 504))))) 509) \"Raw\" 511) 511)) ((reduce (attr (account_of_seed \"dan\" 481) \"public_key_hash\" 481) 481) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 481) \"secret_key\" 481) 481) (pack (tuple 509 (literal (chain_id_cst \"0x9caecab9\") 493) (tuple 509 (literal (intOrNat 1) 509) (lambda 0 \"\" 509 ((set_type (lambdaParams 0 \"\" 509 (unknown 61)) \"unit\" 502) (result (list 504 (transfer (literal (intOrNat 1) 504) (literal (mutez 0) 504) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 503) \"Some\" \"None\" 503) 504)) 504))))) 509) \"Raw\" 512) 512)) ((reduce (attr (account_of_seed \"eve\" 482) \"public_key_hash\" 482) 482) (reduce (make_signature (reduce (attr (account_of_seed \"eve\" 482) \"secret_key\" 482) 482) (pack (tuple 509 (literal (chain_id_cst \"0x9caecab9\") 493) (tuple 509 (literal (intOrNat 1) 509) (lambda 0 \"\" 509 ((set_type (lambdaParams 0 \"\" 509 (unknown 61)) \"unit\" 502) (result (list 504 (transfer (literal (intOrNat 1) 504) (literal (mutez 0) 504) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 503) \"Some\" \"None\" 503) 504)) 504))))) 509) \"Raw\" 513) 513))) (tuple 525 (literal (chain_id_cst \"0x9caecab9\") 493) (tuple 525 (literal (intOrNat 1) 525) (lambda 1 \"\" 525 ((set_type (lambdaParams 1 \"\" 525 (unknown 62)) \"unit\" 502) (result (list 504 (transfer (literal (intOrNat 1) 504) (literal (mutez 0) 504) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 152) 503) \"Some\" \"None\" 503) 504)) 504))))))", "line_no": 525, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 493)", "time": "(literal (timestamp 123) 522)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 525)", "show": true, "valid": "(literal (bool False) 525)", "voting_powers": "(map 525 )"}]}]